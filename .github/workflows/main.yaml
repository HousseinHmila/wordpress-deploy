name: Deploy to AWS

on:
  #  workflow_dispatch:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TF_VAR_region: eu-west-3
      TF_VAR_eks_cluster_name: poly-cluster
      TF_VAR_rds_instance_id: wordpress-db
      TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      TF_VAR_user_arn: ${{ secrets.USER_ARN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ env.TF_VAR_region }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          audience: sts.amazonaws.com

      - name: Run Terraform
        run: |
          cd src
          terraform init
          terraform apply -auto-approve

      - name: Upload Terraform state
        uses: actions/upload-artifact@v3
        with:
          name: terraform-state
          path: src/terraform.tfstate

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Check kubectl version
        run: kubectl version --client

      - name: Check AWS CLI version
        run: aws --version

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ env.TF_VAR_eks_cluster_name }} 
          kubectl config get-contexts
          kubectl config current-context

      - name: Display kubeconfig
        run: cat ~/.kube/config

      - name: Deploy S3 pod
        run: kubectl apply -f kube_manifest/s3_pod.yaml

      - name: Install ArgoCD
        run: |
          kubectl apply -f kube_manifest/ns.yaml
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
          kubectl apply -f kube_manifest/argo_secret_auth.yaml
          kubectl apply -f kube_manifest/argo_config.yaml

      - name: Setup ArgoCD service
        run: |
          kubectl patch svc argocd-server -n argocd --type='json' -p='[{"op": "replace", "path": "/spec/type", "value": "NodePort"}]'
          kubectl get svc argocd-server -n argocd
          kubectl get node -owide
          kubectl get svc -n poly

  destroy:
    runs-on: ubuntu-latest
    env:
      TF_VAR_region: eu-west-3
      TF_VAR_eks_cluster_name: poly-cluster
      TF_VAR_rds_instance_id: wordpress-db
      TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      TF_VAR_user_arn: ${{ secrets.USER_ARN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ env.TF_VAR_region }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          audience: sts.amazonaws.com

      - name: Download Terraform state
        uses: actions/download-artifact@v3
        with:
          name: terraform-state
          path: src/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Destroy Infrastructure
        run: |
          cd src
          terraform init
          terraform destroy -auto-approve -var "db_username=$TF_VAR_db_username" -var "db_password=$TF_VAR_db_password"
